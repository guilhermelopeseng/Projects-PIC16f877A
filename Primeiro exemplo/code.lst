CCS PCM C Compiler, Version 5.097d, 1               10-dez-20 18:22
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Guilherme\Github\PIC 16f877a\Primeiro exemplo\code.lst

               ROM used:   56 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 7

0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   019
.................... #include <16F877a.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay(clock=4000000)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... 
.................... main(){
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... 	while(true){
.................... 		int tempo;
.................... 		tempo = 100;
0024:  MOVLW  64
0025:  BCF    03.5
0026:  MOVWF  21
.................... 		output_high(PIN_B0);
0027:  BSF    03.5
0028:  BCF    06.0
0029:  BCF    03.5
002A:  BSF    06.0
.................... 		delay_ms(tempo);
002B:  MOVF   21,W
002C:  MOVWF  22
002D:  CALL   004
.................... 		output_low(PIN_B0);
002E:  BSF    03.5
002F:  BCF    06.0
0030:  BCF    03.5
0031:  BCF    06.0
.................... 		delay_ms(tempo);
0032:  MOVF   21,W
0033:  MOVWF  22
0034:  CALL   004
0035:  BSF    03.5
0036:  GOTO   024
.................... 	}
.................... }
0037:  GOTO   037

Configuration Fuses:
   Word  1: 373B   RC NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
